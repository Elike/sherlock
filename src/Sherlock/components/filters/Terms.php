<?php
/**
 * User: Zachary Tong
 * Date: 2013-02-19
 * Time: 08:26 PM
 * Auto-generated by "generate.filters.php"
 */
namespace sherlock\components\filters;

use sherlock\components;
use sherlock\common\exceptions;


/**
 * @method \sherlock\components\filters\Terms field() field(string $value)
 * @method \sherlock\components\filters\Terms terms() terms(aray $value)
 * @method \sherlock\components\filters\Terms execution() execution(string $value) Default: "plain"
 * @method \sherlock\components\filters\Terms _cache() _cache(bool $value) Default: true

 */
class Terms extends \sherlock\components\BaseComponent implements \sherlock\components\FilterInterface
{
	public function __construct($hashMap = null)
	{
		$this->params['execution'] = "plain";
		$this->params['_cache'] = true;

		parent::__construct($hashMap);
	}
	
	public function toArray()
	{
		$ret = array (
  'terms' => 
  array (
    $this->params["field"] => $this->params["terms"],
    'execution' => $this->params["execution"],
    '_cache' => $this->params["_cache"],
  ),
);
		return $ret;
	}

}

?>