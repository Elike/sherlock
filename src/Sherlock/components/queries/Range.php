<?php
/**
 * User: Zachary Tong
 * Date: 2013-02-16
 * Time: 09:10 PM
 * Auto-generated by "generate.php"
 */
namespace sherlock\components\queries;

use sherlock\components;
use sherlock\common\exceptions;


/**
 * @method \sherlock\components\queries\Range field() field(string $value)
 * @method \sherlock\components\queries\Range from() from(multi $value)
 * @method \sherlock\components\queries\Range to() to(multi $value)
 * @method \sherlock\components\queries\Range include_lower() include_lower(bool $value) Default: true
 * @method \sherlock\components\queries\Range include_upper() include_upper(bool $value) Default: true
 * @method \sherlock\components\queries\Range boost() boost(float $value) Default: 1.0

 */
class Range extends \sherlock\components\BaseComponent implements \sherlock\components\QueryInterface
{
	public function __construct($hashMap = null)
	{
		$this->params['include_lower'] = true;
		$this->params['include_upper'] = true;
		$this->params['boost'] = 1.0;

		parent::__construct($hashMap);
	}
	
	public function toArray()
	{
		$ret = array (
  'range' => 
  array (
    $this->params["field"] => 
    array (
      'from' => $this->params["from"],
      'to' => $this->params["to"],
      'include_lower' => $this->params["include_lower"],
      'include_upper' => $this->params["include_upper"],
      'boost' => $this->params["boost"],
    ),
  ),
);
		return $ret;
	}
	
	public function toJSON()
	{
		return parent::toJSON();
	}
}

?>