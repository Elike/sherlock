<?php
/**
 * User: Zachary Tong
 * Date: 2013-02-16
 * Time: 09:24 PM
 * Auto-generated by "generate.php"
 * @package Sherlock\components\queries
 */
namespace Sherlock\components\queries;

use Sherlock\components;
use Sherlock\components\QueryInterface;

/**
 * Class CustomFiltersScore
 * @package Sherlock\components\queries
 */
class CustomFiltersScore extends components\BaseComponent implements QueryInterface
{
    /**
     * @param QueryInterface $value
     *
     * @return $this
     */
    public function query(QueryInterface $value)
    {
        $this->params['query'] = $value->toArray();
        return $this;
    }


    /**
     * @param string $value
     *
     * @return $this
     */
    public function score_mode($value)
    {
        $this->params['score_mode'] = $value;
        return $this;
    }


    /**
     * @param float $value
     *
     * @return $this
     */
    public function max_boost($value)
    {
        $this->params['max_boost'] = $value;
        return $this;
    }

    /**
     * @param \Sherlock\components\FilterInterface | array $filter,... - one or more Filters can be specified individually, or an array of filters
     *
     * @return CustomFiltersScore
     */
    public function filters($filter)
    {
        $args = $this->normalizeFuncArgs(func_get_args());

        foreach ($args as $arg) {
            if ($arg instanceof \Sherlock\components\FilterInterface) {
                $this->params['filters'][] = array("filter" => $arg->toArray());
            }
        }

        return $this;
    }


    /**
     * @return array
     */
    public function toArray()
    {
        $params = $this->paramsToArray(
            array(
                'query',
                'filters',
                'score_mode',
                'max_boost',
            )
        );

        $ret = array('custom_filters_score' => $params);

        return $ret;
    }

}
