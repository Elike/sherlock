<?php
/**
 * User: Zachary Tong
 * Date: 2013-02-16
 * Time: 09:24 PM
 * Auto-generated by "generate.php"
 */
namespace sherlock\components\queries;

use sherlock\components;
use sherlock\common\exceptions;


/**
 * @method \sherlock\components\queries\HasParent parent_type() parent_type(string $value)
 * @method \sherlock\components\queries\HasParent score_type() score_type(string $value) Default: "score"
 * @method \sherlock\components\queries\HasParent query() query(QueryIntefrace $value)

 */
class HasParent extends \sherlock\components\BaseComponent implements \sherlock\components\QueryInterface
{
	public function __construct($hashMap = null)
	{
		$this->params['score_type'] = "score";

		parent::__construct($hashMap);
	}
	
	public function toArray()
	{
		$ret = array (
  'has_parent' => 
  array (
    'parent_type' => $this->params["parent_type"],
    'score_type' => $this->params["score_type"],
    'query' => $this->params["query"],
  ),
);
		return $ret;
	}

}

?>