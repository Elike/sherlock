<?php
/**
 * User: Zachary Tong
 * Date: 2/19/13
 * Time: 8:31 PM
 */

namespace sherlock\tests;
use sherlock\Sherlock;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-02-07 at 03:12:53.
 */
class QueriesTest extends \PHPUnit_Framework_TestCase
{
	/**
	 * @var Sherlock
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new \sherlock\sherlock;
		$this->object->addNode('loopback.com', '9200');
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
		try{
			$this->object->index('test123')->delete();
		}
		catch(\Exception $e)
		{

		}
	}

	function assertThrowsException($exception_name, $code) {
		$e = null;
		try{
			$code();
		}catch (\Exception $e) {
			// No more code, we only want to catch the exception in $e
		}

		$this->assertInstanceOf($exception_name, $e);
	}


	public function testBool()
	{
		$request = $this->object->search();
		$must = Sherlock::query()->Term()->field("message")
			->term("ElasticSearch");

		$should = Sherlock::query()->Match()->field("author")
			->query("Zachary Tong")
			->boost(2.5);

		$must_not = Sherlock::query()->Term()->field("message")
			->term("Solr");

		$bool = Sherlock::query()->Bool()->must($must)->should($should)->must_not($must_not);

		$request->query($bool)->execute();
	}


}